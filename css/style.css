@charset "UTF-8";
/**
  Нормализация блочной модели
 */
*,
::before,
::after {
  box-sizing: border-box;
}

/**
  Убираем внутренние отступы слева тегам списков,
  у которых есть атрибут class
 */
:where(ul, ol):where([class]) {
  padding-left: 0;
}

/**
  Убираем внешние отступы body и двум другим тегам,
  у которых есть атрибут class
 */
body,
:where(blockquote, figure):where([class]) {
  margin: 0;
}

/**
  Убираем внешние отступы вертикали нужным тегам,
  у которых есть атрибут class
 */
:where(h1,
h2,
h3,
h4,
h5,
h6,
p,
ul,
ol,
dl):where([class]) {
  margin-block: 0;
}

:where(dd[class]) {
  margin-left: 0;
}

:where(fieldset[class]) {
  margin-left: 0;
  padding: 0;
  border: none;
}

/**
  Убираем стандартный маркер маркированному списку,
  у которого есть атрибут class
 */
:where(ul[class]) {
  list-style: none;
}

:where(address[class]) {
  font-style: normal;
}

/**
  Обнуляем вертикальные внешние отступы параграфа,
  объявляем локальную переменную для внешнего отступа вниз,
  чтобы избежать взаимодействие с более сложным селектором
 */
p {
  --paragraphMarginBottom: 24px;
  margin-block: 0;
}

/**
  Внешний отступ вниз для параграфа без атрибута class,
  который расположен не последним среди своих соседних элементов
 */
p:where(:not([class]):not(:last-child)) {
  margin-bottom: var(--paragraphMarginBottom);
}

/**
  Упрощаем работу с изображениями и видео
 */
img,
video {
  display: block;
  max-width: 100%;
  height: auto;
}

/**
  Наследуем свойства шрифт для полей ввода
 */
input,
textarea,
select,
button {
  font: inherit;
}

html {
  /**
    Пригодится в большинстве ситуаций
    (когда, например, нужно будет "прижать" футер к низу сайта)
   */
  height: 100%;
  /**
    Убираем скачок интерфейса по горизонтали
    при появлении / исчезновении скроллбара
   */
  scrollbar-gutter: stable;
}

/**
  Плавный скролл
 */
html,
:has(:target) {
  scroll-behavior: smooth;
}

body {
  /**
    Пригодится в большинстве ситуаций
    (когда, например, нужно будет "прижать" футер к низу сайта)
   */
  min-height: 100%;
  /**
    Унифицированный интерлиньяж
   */
  line-height: 1.5;
}

/**
  Нормализация высоты элемента ссылки при его инспектировании в DevTools
 */
a:where([class]) {
  display: inline-flex;
}

/**
  Курсор-рука при наведении на элемент
 */
button,
label {
  cursor: pointer;
}

/**
  Приводим к единому цвету svg-элементы
  (за исключением тех, у которых уже указан
  атрибут fill со значением 'none' или начинается с 'url')
 */
:where([fill]:not([fill=none],
[fill^=url])) {
  fill: currentColor;
}

/**
  Приводим к единому цвету svg-элементы
  (за исключением тех, у которых уже указан
  атрибут stroke со значением 'none')
 */
:where([stroke]:not([stroke=none],
[stroke^=url])) {
  stroke: currentColor;
}

/**
  Чиним баг задержки смены цвета при взаимодействии с svg-элементами
 */
svg * {
  transition-property: fill, stroke;
}

/**
  Приведение рамок таблиц в классический 'collapse' вид
 */
:where(table) {
  border-collapse: collapse;
  border-color: currentColor;
}

/**
  Удаляем все анимации и переходы для людей,
  которые предпочитают их не использовать
 */
@media (prefers-reduced-motion: reduce) {
  *,
  ::before,
  ::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}
@font-face {
  font-family: "Playfair Display";
  src: url("../fonts/PlayfairDisplay-Bold.woff2") format("woff2");
  font-style: normal;
  font-weight: 700;
  font-display: swap;
}
@font-face {
  font-family: "Raleway";
  src: url("../fonts/Raleway-Regular.woff2") format("woff2");
  font-style: normal;
  font-weight: 400;
  font-display: swap;
}
@font-face {
  font-family: "Raleway";
  src: url("../fonts/Raleway-Bold.woff2") format("woff2");
  font-style: normal;
  font-weight: 700;
  font-display: swap;
}
@font-face {
  font-family: "Roboto";
  src: url("../fonts/Roboto-Light.woff2") format("woff2");
  font-style: normal;
  font-weight: 300;
  font-display: swap;
}
:root {
  --color-light: rgba(255, 255, 255, 1);
  --color-gray: rgba(190, 190, 190, 1);
  --color-star-gray: rgba(231, 231, 231, 1);
  --color-accent: rgba(212, 193, 127, 1);
  --color-bg: rgba(36, 43, 51, 1);
  --border: 1px solid transparent;
  --font-family-base: "Raleway", sans-serif;
  --font-family-accent: "Playfair Display", sans-serif;
  --container-width: 1080px;
  --big-container-width: 1900px;
  --container-padding-x: 10px;
  --section-padding-y: 180px;
  --button-height: 50px;
  --transition-duration: 0.2s;
}

.container {
  max-width: calc(var(--container-width) + var(--container-padding-x) * 2);
  margin-inline: auto;
  padding-inline: var(--container-padding-x);
}

.big-container {
  max-width: calc(var(--big-container-width) + var(--container-padding-x) * 2);
  margin-inline: auto;
  padding-inline: var(--container-padding-x);
}

.visually-hidden {
  position: absolute !important;
  width: 1px !important;
  height: 1px !important;
  margin: -1px !important;
  border: 0 !important;
  padding: 0 !important;
  white-space: nowrap !important;
  -webkit-clip-path: inset(100%) !important;
          clip-path: inset(100%) !important;
  clip: rect(0 0 0 0) !important;
  overflow: hidden !important;
}

@media (max-width: 768px) {
  .hidden-mobile {
    display: none !important;
  }
}

@media (min-width: 1281px) {
  .visible-mobile {
    display: none !important;
  }
}
@media (min-width: 1024px) and (max-width: 1280px) {
  .visible-mobile {
    display: none !important;
  }
}
@media (min-width: 768px) and (max-width: 1023px) {
  .visible-mobile {
    display: none !important;
  }
}

body {
  font-size: clamp(13px, 0.8333333333vw, 16px);
  margin: 0 auto;
  font-family: var(--font-family-base);
  font-weight: 400;
  color: var(--color-light);
  background-color: var(--color-bg);
}

a,
button,
input,
textarea,
svg * {
  transition-duration: var(--transition-duration);
}

ul {
  padding: 0;
}

li {
  list-style-type: none;
}

a {
  text-decoration: none;
  color: inherit;
}

h1, h2, h3, h4 {
  font-weight: 700;
}

h1 {
  font-size: clamp(38px, 2.5vw, 48px);
  letter-spacing: 0.1em;
}

h2 {
  font-size: clamp(29px, 1.875vw, 36px);
}

h3 {
  font-size: clamp(16px, 1.0416666667vw, 20px);
}

h4 {
  font-size: clamp(13px, 0.8333333333vw, 16px);
}

.header {
  padding-top: 30px;
}
.header__inner {
  display: flex;
  justify-content: space-between;
}
@media (max-width: 1281px) {
  .header__inner {
    padding-inline: 30px;
  }
}
.header__menu {
  font-size: 14px;
  align-self: center;
}
.header__menu-list {
  display: flex;
  -moz-column-gap: 40px;
       column-gap: 40px;
  letter-spacing: 0.05;
}
.header__menu-link {
  transition: var(--transition-duration);
}
@media (hover: hover) {
  .header__menu-link:hover {
    color: var(--color-accent);
    transform: scale(1.02);
  }
}
@media (hover: none) {
  .header__menu-link:active {
    color: var(--color-accent);
    transform: scale(1.02);
  }
}

.face {
  text-align: center;
  background-image: linear-gradient(rgb(36, 43, 51), rgba(45, 52, 60, 0.38), rgb(36, 43, 51)), url(../images/face-bg.png);
  background-size: cover;
  background-position: center;
  background-repeat: no-repeat;
}
.face__h1 {
  font-family: var(--font-family-accent);
  margin: 0 auto;
  max-width: 600px;
  width: 100%;
  padding-top: 200px;
  color: var(--color-accent);
  white-space: nowrap;
  text-align: center;
}
@media (max-width: 768px) {
  .face__h1 {
    white-space: wrap;
    padding-top: 100px;
    max-width: 500px;
  }
}
@media (max-width: 768px) {
  .face__h1 {
    font-size: 32px;
  }
}
.face__img {
  padding-top: 100px;
  margin-bottom: 200px;
}
@media (max-width: 768px) {
  .face__img {
    padding-top: 50px;
    margin-bottom: 100px;
  }
}
.face__contacts {
  display: flex;
  justify-content: center;
  -moz-column-gap: 100px;
       column-gap: 100px;
}
@media (max-width: 490px) {
  .face__contacts {
    flex-direction: column;
    justify-content: center;
    align-items: center;
    row-gap: 20px;
  }
}
.face__contacts-adress, .face__contacts-phone {
  display: flex;
  gap: 15px;
}/*# sourceMappingURL=style.css.map */